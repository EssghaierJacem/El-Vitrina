.page-layout {
  display: flex;
  flex-direction: row;
  gap: 2rem;
  padding: 20px;
}

/* REAL floating left side */
.lottie-side {
  position: fixed;
  top: 50%;
  left: 20px;
  transform: translateY(-50%);
  width: 300px;
  background: #f9f9f9;
  border-radius: 12px;
  padding: 20px;
  box-shadow: 0 6px 16px rgba(0,0,0,0.15);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.lottie-side ng-lottie {
  width: 100%;
  height: 250px;
}

.try-ai-button {
  margin-top: 20px;
  width: 100%;
  font-weight: bold;
}

.requests-side {
  margin-left: 350px; /* move the content so it doesn't hide behind Lottie */
  flex: 1;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .page-layout {
    flex-direction: column;
  }

  .lottie-side {
    position: relative;
    top: unset;
    left: unset;
    transform: none;
    width: 100%;
    margin-bottom: 20px;
  }

  .requests-side {
    margin-left: 500px; /* less space: 260 width + 20 padding + small safe zone */
    flex: 1;
  }
}


/* Keep all your previous styles for cards, filter-buttons, delete-button, etc */
/* Main container */
.card-container {
    max-width: 800px;
    margin: 1.5rem auto;
    padding: 0 1rem;
  }
  
  /* Card styling */
  mat-card {
    padding: 1.5rem;
    margin-bottom: 2rem;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  mat-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
  }
  
  /* Header section */
  mat-card-header {
    display: flex;
    align-items: center;
    padding-bottom: 1rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid #f0f0f0;
  }
  
  .example-header-image {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 1rem;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .user-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  mat-card-title {
    font-size: 1.4rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
    color: #2c3e50;
  }
  
  mat-card-subtitle {
    color: #666;
    font-size: 0.9rem;
    line-height: 1.4;
  }
  
  /* Grid layout for image and description */
  mat-grid-list {
    width: 100%;
    margin: 1rem 0;
  }
  
  mat-grid-tile {
    padding: 0.5rem;
  }
  
  /* Image styling */
  .request-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
    transition: transform 0.3s ease;
  }
  
  .request-image:hover {
    transform: scale(1.02);
  }
  
  /* Description text */
  mat-grid-tile p {
    padding: 1rem;
    color: #444;
    line-height: 1.6;
    margin: 0;
  }
  
  /* Divider */
  hr {
    border: none;
    height: 1px;
    background-color: #eee;
    margin: 1rem 0;
  }
  
  /* Actions */
  mat-card-actions {
    display: flex;
    justify-content: flex-end;
    padding: 0 !important;
    margin-top: 1rem;
  }
  
  mat-card-actions button {
    margin-left: 0.5rem;
    transition: all 0.2s ease;
  }
  
  mat-card-actions button:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* View count button */
  mat-card-actions button mat-icon {
    margin-left: 0.25rem;
    font-size: 1rem;
    height: 1rem;
    width: 1rem;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .card-container {
      max-width: 90%;
      padding: 0 0.5rem;
    }
    
    mat-grid-list {
      cols: 1 !important;
    }
    
    mat-grid-tile {
      grid-column: span 5 !important;
      grid-row: span 1 !important;
    }
    
    .request-image {
      height: 200px;
    }
    
    mat-card {
      padding: 1rem;
    }
    
    .example-header-image {
      width: 48px;
      height: 48px;
    }
  }
  
  @media (max-width: 480px) {
    mat-card-title {
      font-size: 1.2rem;
    }
    
    mat-card-subtitle {
      font-size: 0.8rem;
    }
    
    mat-card-actions {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    mat-card-actions button {
      width: 100%;
      margin-left: 0;
    }
  }
  .delete-button {
    position: absolute;
    top: 5px;
    right: 5px;
    z-index: 1;
  }
  
  .card-container {
    position: relative;
  }
  /* Add these to your existing CSS */

/* Delete button styles (enhance your existing ones) */
.delete-button {
  position: absolute;
  top: 5px;
  right: 5px;
  z-index: 1;
  color: #f44336;
  background-color: rgba(255, 255, 255, 0.8);
  transition: all 0.2s ease;
  
  &:hover {
    background-color: rgba(244, 67, 54, 0.1);
    transform: scale(1.1);
  }
  
  mat-icon {
    font-size: 20px;
  }
}

/* Reset button styles */
button[mat-raised-button][color="accent"] {
  display: flex;
  align-items: center;
  gap: 8px;
  margin: 20px auto;
  padding: 8px 16px;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  mat-icon {
    font-size: 18px;
    height: 18px;
    width: 18px;
  }
}

/* Animation for removed items */
.card-container {
  position: relative;
  transition: all 0.3s ease;
  
  /* Add this if you want a fade-out animation when removing */
  &.removing {
    opacity: 0;
    transform: scale(0.95);
    height: 0;
    margin-bottom: 0;
    overflow: hidden;
  }
}

/* Responsive adjustments for delete button */
@media (max-width: 768px) {
  .delete-button {
    top: 3px;
    right: 3px;
    
    mat-icon {
      font-size: 18px;
    }
  }
}

@media (max-width: 480px) {
  .delete-button {
    mat-icon {
      font-size: 16px;
    }
  }
  
  button[mat-raised-button][color="accent"] {
    width: 100%;
    justify-content: center;
  }
}
.filter-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 2rem;
  flex-wrap: wrap;

  button {
    min-width: 150px;
    transition: all 0.3s ease;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
  }
}

@media (max-width: 600px) {
  .filter-buttons {
    flex-direction: column;
    align-items: center;
    
    button {
      width: 100%;
      max-width: 250px;
    }
  }
}
.filter-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin: 2rem 0;
  flex-wrap: wrap;

  button {
    min-width: 180px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 16px;
    position: relative;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    mat-icon {
      font-size: 20px;
      height: 20px;
      width: 20px;
      margin-right: 8px;
    }

    .button-text {
      flex-grow: 1;
      text-align: left;
      margin: 0 8px;
    }

    .count-badge {
      background: rgba(0, 0, 0, 0.1);
      color: rgba(0, 0, 0, 0.7);
      border-radius: 12px;
      padding: 2px 8px;
      font-size: 12px;
      font-weight: 500;
    }
  }

  .active-filter {
    background-color: #3f51b5 !important;
    color: white !important;
    box-shadow: 0 2px 10px rgba(63, 81, 181, 0.3) !important;
    
    mat-icon {
      color: white;
    }
    
    .count-badge {
      background: rgba(255, 255, 255, 0.2);
      color: white;
    }
  }
}

@media (max-width: 600px) {
  .filter-buttons {
    flex-direction: column;
    align-items: stretch;
    
    button {
      width: 100%;
      max-width: none;
    }
  }
}
/* styles.scss or your global CSS */
.cdk-overlay-container {
  position: fixed;
  z-index: 1000;
}

.cdk-global-overlay-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
}

.custom-dialog {
  .mat-dialog-container {
    padding: 24px;
    border-radius: 8px;
    overflow: auto;
    
    // Prevent dialog from stretching to viewport edges
    max-width: 90vw;
    max-height: 90vh;
  }
}

/* Container for the heat indicator */
.request-heat-container {
  position: relative;
  margin-top: 20px;
  padding-top: 24px; /* Space for fire icon */
}

/* Fire icon that moves with progress */
.fire-tracker {
  position: absolute;
  top: 0;
  transform: translateX(-50%) translateY(-50%);
  transition: left 0.5s ease-out;
  z-index: 2;
}

/* Enhanced fire animations */
.heat-icon {
  font-size: 24px;
  transition: all 0.3s ease;
  text-shadow: 0 0 5px currentColor;
}

.heat-icon.low {
  color: #FFA500; /* Orange */
  animation: gentle-flicker 2s infinite alternate;
}

.heat-icon.medium {
  color: #FF4500; /* Orange-red */
  animation: moderate-flicker 1.5s infinite alternate;
}

.heat-icon.high {
  color: #FF0000; /* Red */
  animation: intense-flicker 0.8s infinite alternate;
}

/* Fire animations */
@keyframes gentle-flicker {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes moderate-flicker {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
  75% { opacity: 0.9; }
}

@keyframes intense-flicker {
  0% { transform: scale(1) rotate(-5deg); }
  20% { transform: scale(1.1) rotate(5deg); }
  40% { transform: scale(1.15) rotate(-5deg); }
  60% { transform: scale(1.2) rotate(5deg); }
  80% { transform: scale(1.1) rotate(-5deg); }
  100% { transform: scale(1.15) rotate(5deg); }
}

/* Progress bar styling */
mat-progress-bar {
  height: 10px;
  border-radius: 5px;
  margin-top: 8px;
  position: relative;
}

/* Progress bar colors with glow effect */
mat-progress-bar.cool {
  --mdc-linear-progress-active-indicator-color: #4285F4;
}

mat-progress-bar.warming {
  --mdc-linear-progress-active-indicator-color: #FBBC05;
  box-shadow: 0 0 8px rgba(251, 188, 5, 0.3);
}

mat-progress-bar.hot {
  --mdc-linear-progress-active-indicator-color: #EA4335;
  box-shadow: 0 0 10px rgba(234, 67, 53, 0.4);
}

mat-progress-bar.blazing {
  --mdc-linear-progress-active-indicator-color: #FF6D00;
  box-shadow: 0 0 15px rgba(255, 109, 0, 0.5);
  animation: bar-pulse 1.5s infinite;
}

@keyframes bar-pulse {
  0% { box-shadow: 0 0 15px rgba(255, 109, 0, 0.5); }
  50% { box-shadow: 0 0 20px rgba(255, 109, 0, 0.8); }
  100% { box-shadow: 0 0 15px rgba(255, 109, 0, 0.5); }
}

.heat-value {
  display: inline-block;
  margin-top: 5px;
  font-weight: bold;
  font-size: 12px;
  color: #666;
}
/* Compact heat footer */
.request-heat-footer {
  display: flex;
  justify-content: flex-end;
  padding: 8px 0;
  position: relative;
}

.heat-info {
  display: flex;
  align-items: center;
  gap: 12px;
  width: 180px; /* Fixed width for consistency */
}

.heat-value {
  font-size: 12px;
  font-weight: 500;
  min-width: 30px;
  text-align: right;
}

/* Compact progress container */
.compact-progress-container {
  position: relative;
  width: 100px;
  height: 16px;
}

/* Smaller progress bar */
mat-progress-bar {
  height: 6px !important;
  border-radius: 3px;
  position: absolute;
  top: 5px;
  width: 100%;
}

/* Moving fire icon */
.moving-fire {
  position: absolute;
  top: -6px;
  transform: translateX(-50%);
  font-size: 18px;
  transition: left 0.3s ease-out;
  z-index: 2;
}

/* Color transitions - warmer starting point */
mat-progress-bar.cool {
  --mdc-linear-progress-active-indicator-color: #FFB74D; /* Light orange */
}

mat-progress-bar.warming {
  --mdc-linear-progress-active-indicator-color: #FF8A65; /* Medium orange */
}

mat-progress-bar.hot {
  --mdc-linear-progress-active-indicator-color: #FF5722; /* Dark orange */
}

mat-progress-bar.blazing {
  --mdc-linear-progress-active-indicator-color: #F44336; /* Red */
  --mdc-linear-progress-track-color: #FFEBEE; /* Light red background */
}

/* Fire icon colors */
.moving-fire.cool {
  color: #FFB74D;
  animation: gentle-pulse 2s infinite;
}

.moving-fire.warming {
  color: #FF8A65;
  animation: moderate-pulse 1.5s infinite;
}

.moving-fire.hot {
  color: #FF5722;
  animation: intense-pulse 1s infinite;
}

.moving-fire.blazing {
  color: #F44336;
  animation: blazing-fire 0.5s infinite alternate;
}

/* Animations */
@keyframes gentle-pulse {
  0%, 100% { transform: translateX(-50%) scale(1); }
  50% { transform: translateX(-50%) scale(1.1); }
}

@keyframes moderate-pulse {
  0%, 100% { transform: translateX(-50%) scale(1); }
  50% { transform: translateX(-50%) scale(1.2); }
}

@keyframes intense-pulse {
  0% { transform: translateX(-50%) scale(1) rotate(-3deg); }
  50% { transform: translateX(-50%) scale(1.3) rotate(3deg); }
  100% { transform: translateX(-50%) scale(1) rotate(-3deg); }
}

@keyframes blazing-fire {
  0% { transform: translateX(-50%) scale(1.2); opacity: 1; }
  100% { transform: translateX(-50%) scale(1.5); opacity: 0.9; }
}